?CohortConstructor::intersectCohorts
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
devtools::install_github("darwin-eu-dev/CohortCharacteristics")
devtools::install_github("darwin-eu-dev/CohortCharacteristics")
devtools::install_github("darwin-eu-dev/CohortCharacteristics")
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
cdm$age_cohort <- demographicsCohort(cdm = cdm,
ageRange = c(18, 60),
sex = "Female",
minPriorObservation = 365,
name = "age_cohort")
summariseCohortAttrition(cdm$age_cohort) |> plotCohortAttrition(type = "png")
drug_codes <- getDrugIngredientCodes(cdm,
name = c("diclofenac", "acetaminophen"))
cdm$medications <- conceptCohort(cdm = cdm,
conceptSet = drug_codes,
name = "medications")
summariseCohortAttrition(cdm$medications) |>
visOmopResults::filterGroup(cohort_name == "161_acetaminophen") |>
plotCohortAttrition(type = "png")
summariseCohortAttrition(cdm$medications) |>
visOmopResults::filterGroup(cohort_name == "3355_diclofenac") |>
plotCohortAttrition(type = "png")
?CohortConstructor::intersectCohorts
library(CDMConnector)
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
cdm$condition_occurrence |> group_by(condition_concept_id) |> tally() |> collect() |> arrange(n)
cdm$condition_occurrence |> group_by(condition_concept_id) |> tally() |> collect() |> arrange(desc(n))
cdm$condition_occurrence |> group_by(condition_concept_id) |> tally() |> inner_join(cdm$concept |> select(condition_concept_id = concept_id, concept_name))|> collect() |> arrange(desc(n))
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
cdm$cohort <- conceptCohort(cdm = cdm,
conceptSet = list("viral_sinusitis" = 40481087, "viral_pharyngitis"),
name = "cohort")
cdm$cohort <- conceptCohort(cdm = cdm,
conceptSet = list("viral_sinusitis" = 40481087L, "viral_pharyngitis" = 4112343L),
name = "cohort")
install.packages("omopviewer")
install.packages("CohortConstructor")
options(width = 130)
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
cdm$cohort <- conceptCohort(
cdm = cdm,
conceptSet = list("viral_sinusitis" = 40481087L, "viral_pharyngitis" = 4112343L),
name = "cohort"
)
cdm$cohort
settings(cdm$cohort)
attrition(cdm$cohort)
cohortCount(cdm$cohort)
attr(cdm$cohort, "cohort_codelist")
# Load relevant packages
library(CDMConnector)
library(CodelistGenerator)
library(CohortConstructor)
library(CohortCharacteristics)
library(dplyr)
# Download Eunomia
if (Sys.getenv("EUNOMIA_DATA_FOLDER") == ""){
Sys.setenv("EUNOMIA_DATA_FOLDER" = file.path(tempdir(), "eunomia"))}
if (!dir.exists(Sys.getenv("EUNOMIA_DATA_FOLDER"))){ dir.create(Sys.getenv("EUNOMIA_DATA_FOLDER"))
CDMConnector::downloadEunomiaData()
}
# Connect to the "database"
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomiaDir())
# Create CDM reference object
cdm <- cdmFromCon(
con,
cdmSchema = "main",
writeSchema = "main",
writePrefix = "my_study_"
)
cdm$age_cohort <- demographicsCohort(
cdm = cdm,
ageRange = c(18, 60),
sex = c("Female", "Male"),
minPriorObservation = 365,
name = "age_cohort"
)
settings(cdm$age_cohort)
cohortCount(cdm$age_cohort)
attrition(cdm$age_cohort)
cdm$age_cohort |> summariseCohortAttrition() |> plotCohortAttrition(type = "png")
cdm$age_cohort |> summariseCohortAttrition() |> tableCohortAttrition()
drug_codes <- getDrugIngredientCodes(
cdm = cdm,
name = c("diclofenac", "acetaminophen"),
nameStyle = "{concept_name}"
)
drug_codes
cdm$medications <- conceptCohort(
cdm = cdm,
conceptSet = drug_codes,
name = "medications"
)
settings(cdm$medications)
result <- cdm$medications |>
summariseCohortAttrition()
result |>
tableCohortAttrition(
groupColumn = c("cohort_name"),
hide = c("variable_level", "reason_id", "estimate_name", "cdm_name", settingsColumns(result))
)
attr(cdm$medications, "cohort_codelist")
cdm$medications_requirement <- cdm$medications %>%
requireIsFirstEntry() %>%
requireDemographics(
ageRange = list(c(18, 85)),
sex = "Female",
minPriorObservation = 30,
name = "medications_requirement"
)
result <- cdm$medications_requirement |>
summariseCohortAttrition(cohortId = 1)
result |>
tableCohortAttrition(
groupColumn = c("cohort_name"),
hide = c("variable_level", "reason_id", "estimate_name", "cdm_name", settingsColumns(result))
)
cdm$medications_trimmed <- cdm$medications %>%
trimDemographics(
ageRange = list(c(20, 40)),
minPriorObservation = 365,
name = "medications_trimmed"
)
result <- cdm$medications_trimmed |>
summariseCohortAttrition(cohortId = 1)
result |>
tableCohortAttrition(
groupColumn = c("cohort_name"),
hide = c("variable_level", "reason_id", "estimate_name", "cdm_name", settingsColumns(result))
)
cdm$intersection <- cdm$medications |>
collapseCohorts(gap = 7) |>
CohortConstructor::intersectCohorts(
gap = 7,
name = "intersection"
)
settings(cdm$intersection)
attr(cdm$intersection, "cohort_codelist")
aspirin <- getDrugIngredientCodes(cdm = cdm, name  = "aspirin", nameStyle = "{concept_name}")
cdm$aspirin <- conceptCohort(cdm = cdm, conceptSet = aspirin, name = "aspirin")
summariseCohortCount(cdm$aspirin) |> tableCohortCount()
amoxicillin <- getDrugIngredientCodes(cdm = cdm, name  = "amoxicillin", nameStyle = "{concept_name}")
cdm$aspirin_last <- cdm$aspirin |>
requireIsLastEntry(name = "aspirin_last") |>
requireInDateRange(dateRange = as.Date(c("1960-01-01", "1979-12-31"))) |>
requireConceptIntersect(
conceptSet = amoxicillin,
window = list(c(-7, 0)),
intersections = 0
)
summariseCohortAttrition(cdm$aspirin_last) |> tableCohortAttrition()
ibuprofen <- getDrugIngredientCodes(cdm = cdm, name  = "ibuprofen", nameStyle = "{concept_name}")
cdm$ibuprofen <- conceptCohort(cdm = cdm, conceptSet = ibuprofen, name = "ibuprofen")
cdm$ibuprofen_death <- cdm$ibuprofen %>%
exitAtDeath(requireDeath = TRUE, name = "ibuprofen_death")
summariseCohortAttrition(cdm$ibuprofen_death) |> tableCohortAttrition()
cdm$ibuprofen_years <- cdm$ibuprofen |>
yearCohorts(years = 1975:1980, name = "ibuprofen_years")
summariseCohortCount(cdm$ibuprofen_years) |> tableCohortCount()
amoxicillin <- getDrugIngredientCodes(
cdm = cdm,
name  = c("amoxicillin"),
nameStyle = "{concept_name}"
)
diclofenac <- getDrugIngredientCodes(
cdm = cdm,
name  = "diclofenac",
nameStyle = "{concept_name}"
)
cdm$diclofenac <- conceptCohort(
cdm = cdm,
conceptSet = diclofenac,
name = "diclofenac"
) |>
requireDemographics(
ageRange = list(c(16, 150)),
minPriorObservation = 365
) |>
requireConceptIntersect(
conceptSet = amoxicillin,
window = list(c(-Inf, -1)),
intersections = 0
) |>
collapseCohorts(gap = 7) |>
requireIsFirstEntry()
summariseCohortAttrition(cdm$diclofenac) |> tableCohortAttrition()
cdm$person
cdm$diclofenac <- conceptCohort(
cdm = cdm,
conceptSet = diclofenac,
name = "diclofenac"
)
cdm$diclofenac <- conceptCohort(
cdm = cdm,
conceptSet = diclofenac,
name = "diclofenac"
) |>
requireDemographics(
sex = "Female",
ageRange = list(c(16, 150)),
minPriorObservation = 365
) |>
requireConceptIntersect(
conceptSet = amoxicillin,
window = list(c(-Inf, -1)),
intersections = 0
) |>
collapseCohorts(gap = 7) |>
requireIsFirstEntry()
summariseCohortAttrition(cdm$diclofenac) |> tableCohortAttrition()
